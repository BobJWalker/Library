{
    "Id": "b163a315-24b7-4bf8-9cca-d9011f57019a",
    "Name": "Send Email using MailKit",
    "Description": "This step template supports sending an email using the [MailKit](https://github.com/jstedfast/MailKit) library, a cross-platform .NET library for IMAP, POP3, and SMTP.\n\n- Support for multiple TO addresses (separated by `,`).\n- Support for multiple CC addresses (separated by `,`).\n- *Optional* support for a separate `reply-to` address.\n\nThis step **does not** support running on PowerShell: Windows Desktop Edition.\n\n---\n\n**Required:** \n- The `MailKit` and `MimeKit` packages are installed on the target or worker. If the packages can't be found, the step will attempt to download them from [https://www.nuget.org](https://www.nuget.org).\n- PowerShell Core (including when running on Windows).\n\n*Notes:*\n\n- Tested on Octopus `2025.1`.\n- Tested on Windows and Linux with PowerShell Core only.",
    "ActionType": "Octopus.Script",
    "Version": 1,
    "CommunityActionTemplateId": null,
    "Packages": [],
    "GitDependencies": [],
    "Properties": {
      "Octopus.Action.PowerShell.Edition": "Core",
      "Octopus.Action.EnabledFeatures": "Octopus.Features.SelectPowerShellEditionForWindows",
      "Octopus.Action.Script.ScriptSource": "Inline",
      "Octopus.Action.Script.Syntax": "PowerShell",
      "Octopus.Action.Script.ScriptBody": "$ErrorActionPreference = \"Stop\";\n\nif ($PSEdition -eq \"Core\") {\n    $PSStyle.OutputRendering = \"PlainText\"\n}\n$emailSubject = $OctopusParameters[\"SendEmail.Subject\"]\n$emailSmtpServer = $OctopusParameters[\"SendEmail.SmtpServer\"]\n$emailSmtpPort = $OctopusParameters[\"SendEmail.SmtpPort\"]\n$emailCredentialsUsername = $OctopusParameters[\"SendEmail.Credentials.Username\"]\n$emailCredentialsPassword = $OctopusParameters[\"SendEmail.Credentials.Password\"]\n$emailSecureSocketOption = $OctopusParameters[\"SendEmail.SecureSocketOption\"]\n\n$validSecureSocketOptions = @(\"None\", \"Auto\", \"SslOnConnect\", \"StartTls\", \"StartTlsWhenAvailable\")\nif(-not $validSecureSocketOptions.Contains($emailSecureSocketOption)) {\n    Write-Error \"Invalid SecureSocketOption: $emailSecureSocketOption. Must be one of: $($validSecureSocketOptions -join \", \").\"\n    return\n}\n\n$emailFromAddress = $OctopusParameters[\"SendEmail.FromAddress\"]\n$emailToAddresses = $OctopusParameters[\"SendEmail.TOAddresses\"]\n$emailCcAddresses = $OctopusParameters[\"SendEmail.CCAddresses\"]\n$emailReplyToAddress = $OctopusParameters[\"SendEmail.ReplyToAddress\"]\n\n$HtmlBody = $OctopusParameters[\"SendEmail.HtmlBody\"]\n$TextBody = $OctopusParameters[\"SendEmail.TextBody\"]\n\nWrite-Verbose \"Checking for MimeKit and MailKit packages.\"\ntry {\n    \n    $MimeKitPackage = (Get-Package MimeKit -ErrorAction Stop) | Select-Object -First 1\n} \ncatch {\n    $MimeKitPackage = $null\n}\nif ($null -eq $MimeKitPackage) {\n    Write-Output \"Downloading MimeKit from nuget.org.\"\n    Install-Package -Name 'MimeKit' -Source \"https://www.nuget.org/api/v2\" -SkipDependencies -Force -Scope CurrentUser\n    $MimeKitPackage = (Get-Package MimeKit) | Select-Object -First 1\n}\n\ntry {\n    $MailKitPackage = (Get-Package MailKit -ErrorAction Stop) | Select-Object -First 1\n} \ncatch {\n    $MailKitPackage = $null\n}\nif ($null -eq $MailKitPackage) {\n    Write-Output \"Downloading MailKit from nuget.org.\"\n    Install-Package -Name 'MailKit' -Source \"https://www.nuget.org/api/v2\" -SkipDependencies -Force -Scope CurrentUser\n    $MailKitPackage = (Get-Package MailKit) | Select-Object -First 1\n}\n\n$MimeKitPath = Join-Path (Get-Item $MimeKitPackage.source).Directory.FullName \"lib/netstandard2.1/MimeKit.dll\"\n$MailKitPath = Join-Path (Get-Item $MailKitPackage.source).Directory.FullName \"lib/netstandard2.1/MailKit.dll\"\n\nAdd-Type -Path $MimeKitPath\nAdd-Type -Path $MailKitPath\n\n# Validation/Setting of Secure Socket Options needed after libraries loaded\nswitch($emailSecureSocketOption) {\n    \"Auto\" {\n        $secureSocketOption = [MailKit.Security.SecureSocketOptions]::Auto\n    }\n    \"None\" {\n        $secureSocketOption = [MailKit.Security.SecureSocketOptions]::None\n    }\n    \"SslOnConnect\" {\n        $secureSocketOption = [MailKit.Security.SecureSocketOptions]::SslOnConnect\n    }\n    \"StartTls\" {\n        $secureSocketOption = [MailKit.Security.SecureSocketOptions]::StartTls\n    }\n    \"StartTlsWhenAvailable\" {\n        $secureSocketOption = [MailKit.Security.SecureSocketOptions]::StartTlsWhenAvailable\n    }\n    default {\n        Write-Error \"Invalid SecureSocketOption: $emailSecureSocketOption. Must be one of: $($validSecureSocketOptions -join \", \").\"\n        return\n    }\n}\n\n$SMTP = New-Object MailKit.Net.Smtp.SmtpClient\n\n$Message = New-Object MimeKit.MimeMessage\n$ContentBuilder = [MimeKit.BodyBuilder]::new()\n\n$ContentBuilder.HtmlBody = $HtmlBody\n$ContentBuilder.TextBody = $TextBody\nWrite-Verbose \"Setting From address: $emailFromAddress\" \n$Message.From.Add($emailFromAddress)\n$toAddresses = $emailToAddresses -split \",\"\nWrite-Verbose \"Setting TO addresses: $emailToAddresses\"\nforeach($toAddress in $toAddresses) {\n    $Message.To.Add($toAddress)\n}\n\nif(-not [string]::IsNullOrWhitespace($emailCcAddresses)) {\n    Write-Verbose \"Setting CC addresses: $emailCcAddresses\"\n    $ccAddresses = $emailCcAddresses -split \",\"\n    foreach($ccAddress in $ccAddresses) {\n        $Message.Cc.Add($ccAddress)\n    }\n}\nif(-not [string]::IsNullOrWhitespace($emailReplyToAddress)) {\n    Write-Verbose \"Setting ReplyTo address: $emailReplyToAddress\"\n    $Message.ReplyTo.Add($emailReplyToAddress)\n}\n\nWrite-Verbose \"Setting subject to: $emailSubject\"\n$Message.Subject = $emailSubject\nWrite-Verbose \"Setting MimeMessage Body contents\"\n$Message.Body = $ContentBuilder.ToMessageBody()\nWrite-Verbose \"Connecting to SMTP server: $emailSmtpServer on port: $emailSmtpPort (using SecureSocketOption=$emailSecureSocketOption)\"\n$SMTP.Connect($emailSmtpServer, $emailSmtpPort, $secureSocketOption)\nWrite-Verbose \"Authenticating...\"\n$SMTP.Authenticate($emailCredentialsUsername, $emailCredentialsPassword)\nWrite-Output \"Sending email...\"\n$SMTP.Send($Message)\nWrite-Output \"Email sent.\"\n$SMTP.Disconnect($true)\n$SMTP.Dispose()"
    },
    "Parameters": [
      {
        "Id": "65b67843-2cd5-48a5-ac9d-611de16246a7",
        "Name": "SendEmail.SmtpServer",
        "Label": "SMTP Server",
        "HelpText": "The SMTP Server address e.g. `smtp.gmail.com`",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "3d87558e-aa18-46af-85bb-644890d6654b",
        "Name": "SendEmail.SmtpPort",
        "Label": "SMTP Port",
        "HelpText": "The SMTP Port used for connecting. Typical SMTP ports are: \n- `25`\n- `587` (STARTTLS)\n- `465` (SSL)",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "0c1f7ae0-8cd4-45a5-b53b-e5019ad5ecb0",
        "Name": "SendEmail.SecureSocketOption",
        "Label": "SSL Option",
        "HelpText": "The [SSL Option](https://mimekit.net/docs/html/T_MailKit_Security_SecureSocketOptions.htm) to use:\n- `None`: No SSL or TLS encryption should be used\n- `Auto`: Allow the [IMailService](https://mimekit.net/docs/html/T_MailKit_IMailService.htm) to decide which SSL or TLS options to use (default). If the server does not support SSL or TLS, then the connection will continue without any encryption.\n- `SslOnConnect`: The connection should use SSL or TLS encryption immediately.\n- `StartTls`: Elevates the connection to use TLS encryption immediately after reading the greeting and capabilities of the server. If the server does not support the STARTTLS extension, then the connection will fail and a NotSupportedException will be thrown.\n- `StartTlsWhenAvailable`: Elevates the connection to use TLS encryption immediately after reading the greeting and capabilities of the server, but only if the server supports the STARTTLS extension.\n\nDefault: `Auto`.",
        "DefaultValue": "Auto",
        "DisplaySettings": {
          "Octopus.ControlType": "Select",
          "Octopus.SelectOptions": "None|None\nAuto|Auto\nSslOnConnect|Use SSL\nStartTls|Use STARTTLS\nStartTlsWhenAvailable|Start Tls When Available"
        }
      },
      {
        "Id": "208a3bab-b331-4fa6-a122-459593a4c98f",
        "Name": "SendEmail.Credentials.Username",
        "Label": "Authentication Username",
        "HelpText": "The username to authenticate with the SMTP Server.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "Sensitive"
        }
      },
      {
        "Id": "d42aba20-174a-4b51-af88-78d332f09a08",
        "Name": "SendEmail.Credentials.Password",
        "Label": "Authentication Password",
        "HelpText": "The password to authenticate with the SMTP Server.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "Sensitive"
        }
      },
      {
        "Id": "8eafb51b-599b-4c51-8d35-974c5843c9cb",
        "Name": "SendEmail.Subject",
        "Label": "Email Subject",
        "HelpText": "The Email Subject",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "bc4d18f8-e096-4911-84ce-e35268c83934",
        "Name": "SendEmail.FromAddress",
        "Label": "From Address",
        "HelpText": "The sender address of the Email",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "302fb573-5720-47b6-bbd7-7d0077ca75ba",
        "Name": "SendEmail.TOAddresses",
        "Label": "TO addresses",
        "HelpText": "The recipients of the Email. Multiple addresses can be supplied, separated by a `,`.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "be2267f6-36b0-4f7e-a7cf-f274e56aff2f",
        "Name": "SendEmail.CCAddresses",
        "Label": "(Optional) CC addresses",
        "HelpText": "The *optional* CC (carbon-copy) recipients of the Email. Multiple addresses can be supplied, separated by a `,`.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "b43c49fd-3214-4310-a8cf-10489a3c858f",
        "Name": "SendEmail.ReplyToAddress",
        "Label": "(Optional) Reply-to address",
        "HelpText": "The *optional* `reply-to` address.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "9e07a17f-a044-4f6f-ac0c-5d131058a270",
        "Name": "SendEmail.HtmlBody",
        "Label": "HTML Message Body",
        "HelpText": "The HTML message body of the Email.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "MultiLineText"
        }
      },
      {
        "Id": "bd111434-193d-413b-9d7e-279381061a0c",
        "Name": "SendEmail.TextBody",
        "Label": "Plain Text Message Body",
        "HelpText": "The Text message body of the Email.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "MultiLineText"
        }
      }
    ],
    "StepPackageId": "Octopus.Script",
    "$Meta": {
      "ExportedAt": "2025-02-26T14:52:39.564Z",
      "OctopusVersion": "2025.2.937",
      "Type": "ActionTemplate"
    },
    "LastModifiedBy": "harrisonmeister",
    "Category": "email"
  }
